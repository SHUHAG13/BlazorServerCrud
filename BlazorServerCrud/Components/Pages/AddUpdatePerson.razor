@page "/person/add"
@page "/person/edit/{userId:int}"
@inject IPersonService personService

<PageTitle> @Title</PageTitle>
<h3>@Title</h3>
<a href="#" class="btn btn-outline-dark">Show All</a>
<div class="row">
	<div class="col-md-6">
		<EditForm Model="@person" OnValidSubmit="SaveData" FormName="person-form">
			<div class="form-group">
				<label for="Name">Name</label>
				<InputText class="form-control" @bind-Value="person.Name" />
			</div>
			<div class="form-group">
				<label for="Email">Email</label>
				<InputText class="form-control" @bind-Value="person.Email" />
			</div>

			<div class="alert alert-success" role="alert" style="display:@(string.IsNullOrEmpty(message) ? "none" : "block")">
				@message
			</div>

			<div class="my-2">
				<button type="submit" class="btn btn-primary"> Save</button>
			</div>
		</EditForm>
	</div>
</div>
@code {
	[Parameter]
	public int UserId { get; set; }
	private string message { get; set; } = string.Empty;
	Models.Person person { get; set; } = new();
	private string Title = "Add Person";

	public async Task SaveData()
	{
		person = new Models.Person
			{
				Email = "Sanzid@a.com",
				Name = "Sanzid",
			};
		var res = personService.AddUpdate(person);
		if (res == true)
		{
			message = "Successfully added";
			person = new();

		}
		else
		{
			message = "Could not saved";
		}

	}
	protected override void OnInitialized()
	{
		if (UserId > 0)
		{
			Title = "Update Person";
			person = personService.FindById(UserId) ?? new Models.Person();
		}
		base.OnInitialized();
	}
}